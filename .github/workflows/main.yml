name: Build and Release

on:
  push:
    tags:
      - 'v*'

jobs:
  create-release:
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Generate changelog
        id: changelog
        uses: metcalfc/changelog-generator@v4.0.1
        with:
          myToken: ${{ secrets.GITHUB_TOKEN }}

      - name: Update CHANGELOG.md
        run: |
          echo "${{ steps.changelog.outputs.changelog }}" > CHANGELOG.md
          echo >> CHANGELOG.md
          echo "[Full Changelog](https://github.com/${{ github.repository }}/compare/${{ steps.changelog.outputs.last_tag }}...${{ github.ref }})" >> CHANGELOG.md

      - name: Commit CHANGELOG.md
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add CHANGELOG.md
          git commit -m "Update CHANGELOG.md for ${{ github.ref }}" || echo "No changes to commit"
          git push

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body_path: CHANGELOG.md
          draft: false
          prerelease: false

  build:
    needs: create-release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Install dependencies
      run: npm ci

    - name: Build for macOS
      if: matrix.os == 'macos-latest'
      run: npm run build:mac

    - name: Build for Linux
      if: matrix.os == 'ubuntu-latest'
      run: npm run build:linux

    - name: Build for Windows
      if: matrix.os == 'windows-latest'
      run: npm run build:win

    - name: Upload macOS Release Asset
      if: matrix.os == 'macos-latest'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.upload_url }}
        asset_path: ./dist/Your App Name-${{ github.ref_name }}.dmg
        asset_name: Your-App-Name-${{ github.ref_name }}.dmg
        asset_content_type: application/octet-stream

    - name: Upload Linux Release Asset
      if: matrix.os == 'ubuntu-latest'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.upload_url }}
        asset_path: ./dist/Your App Name-${{ github.ref_name }}.AppImage
        asset_name: Your-App-Name-${{ github.ref_name }}.AppImage
        asset_content_type: application/octet-stream

    - name: Upload Windows Release Asset
      if: matrix.os == 'windows-latest'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.upload_url }}
        asset_path: ./dist/Your App Name-portable-${{ github.ref_name }}.exe
        asset_name: Your-App-Name-portable-${{ github.ref_name }}.exe
        asset_content_type: application/octet-stream
